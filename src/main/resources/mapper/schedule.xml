<?xml version="1.0" encoding="UTF-8"?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.project.dao.ScheduleDAO">

	<resultMap type="com.team1.project.dto.CityDTO" id="CityMap">
		<result property="cityNum" column="city_num" />
		<result property="doeNum" column="doe_num" />
		<result property="cityName" column="city_name" />
		<result property="LATITUDE" column="LATITUDE" />
		<result property="LONGITUDE" column="LONGITUDE" />
	</resultMap>
	<resultMap type="com.team1.project.dto.DayDTO" id="DayMap">
    <result property="dayId" column="day_id" />
    <result property="schedule_Num" column="schedule_Num" />
    <result property="dayDate" column="dayDate" />
<!--     <result property="place" column="place" /> -->
<!--     <result property="memo" column="memo" /> -->
	</resultMap>

<select id="getScheduleList" parameterType="map" resultType="com.team1.project.dto.ScheduleDTO">
    <!-- 로그인 상태인 경우. 좋아요 정보를 가져오기 위한 쿼리 -->
    <if test='MEMBER_ID != null'>
        SELECT s.*,
            CASE   
                WHEN sl.LNO IS NULL THEN 'false'   
                ELSE 'true'   
            END AS "isLike"
        FROM (
            SELECT *
            FROM (
                SELECT
                    a.*,
                    ROWNUM AS rnum
                FROM (
                    SELECT
                        s.*,
                        d.doe_img
                    FROM SCHEDULE s
                    JOIN DOE d ON s.doe_name = d.doe_name
                    <if test='DOE_NAME != null'>
                        WHERE s.DOE_NAME = #{DOE_NAME}
                    </if>
                    <choose>
                        <when test="ORDER == 'like'">
                            ORDER BY s.LIKECNT ASC <!-- 변경: ASC 추가 -->
                        </when>
                        <otherwise>
                            ORDER BY s.SCHEDULE_NUM ASC <!-- 변경: ASC 추가 -->
                        </otherwise>
                    </choose>
                ) a
                WHERE ROWNUM <![CDATA[<=]]> #{endNo}
            )
            <!-- WHERE rnum BETWEEN #{startNo} AND #{endNo} -->
            WHERE rnum <![CDATA[>=]]> #{startNo}
        ) s
        LEFT OUTER JOIN SCHEDULELIKE sl
            ON s.schedule_Num = sl.schedule_Num
            AND sl.userid = #{MEMBER_ID}
    </if>
    
    <!-- 비로그인 상태에서 목록 가져오는 쿼리 -->
    <if test='MEMBER_ID == null'>
        SELECT *
        FROM (
            SELECT
                a.*,
                ROWNUM AS rnum
            FROM (
                SELECT
                    s.*,
                    d.doe_img
                FROM SCHEDULE s
                JOIN DOE d ON s.doe_name = d.doe_name
                <if test='DOE_NAME != null'>
                    WHERE s.DOE_NAME = #{DOE_NAME}
                </if>
                <choose>
                    <when test="ORDER == 'like'">
                        ORDER BY s.LIKECNT ASC <!-- 변경: ASC 추가 -->
                    </when>
                    <otherwise>
                        ORDER BY s.SCHEDULE_NUM ASC <!-- 변경: ASC 추가 -->
                    </otherwise>
                </choose>
            ) a
            WHERE ROWNUM <![CDATA[<=]]> #{endNo}
        )
        <!-- WHERE rnum BETWEEN #{startNo} AND #{endNo} -->
        WHERE rnum <![CDATA[>=]]> #{startNo}
    </if>
</select>



<!--일정 글등록 --> 
    <insert id="writeInsert">
    <selectKey order="BEFORE" keyProperty="schedule_Num" resultType="int">
        select sc.nextval as schedule_Num from dual
    </selectKey> 
    insert into schedule(SCHEDULE_NUM, MEMBER_ID, TITLE, DOE_NAME, START_NUM, END_DATE, REG_DATE, PLACE1,PLACE2,PLACE3, MEMO1,MEMO2,MEMO3, DATE1, DATE2, DATE3)
values(
	#{schedule_Num},
    #{member_id},
    #{title},
    #{doe_Name},    
    #{start_Num},
    #{end_Date},
    SYSDATE,
	#{place1, jdbcType=VARCHAR},
	#{place2, jdbcType=VARCHAR},
	#{place3, jdbcType=VARCHAR},
	#{memo1, jdbcType=CLOB},
	#{memo2, jdbcType=VARCHAR},
	#{memo3, jdbcType=VARCHAR},
	#{date1, jdbcType=DATE},
	#{date2, jdbcType=DATE},
	#{date3, jdbcType=DATE}
	)
	
</insert>

    <!--지역번호 만들기 --> 
    <select id="Doenum" resultMap="CityMap">
		 SELECT city_num, city_name
        FROM city
        WHERE doe_num = #{doe_Num}
	</select>


  <!--지역의 위도, 경도 데이터 가져오기 --> 
    <select id="selectCity" resultMap="CityMap">
		SELECT  LATITUDE, LONGITUDE
        FROM city
        WHERE city_name = #{city_name}
	</select>

<!-- 상세보기 -->
<select id="schduleDetail" resultType="com.team1.project.dto.ScheduleDTO">  
       SELECT 
            S.SCHEDULE_NUM,
            S.MEMBER_ID,
            S.DOE_NAME,
            S.START_NUM,
            S.END_DATE,
            S.MOD_DATE,
            S.TITLE,
            S.PLACE1,
            S.PLACE2,
            S.PLACE3,
            S.MEMO1,
            S.MEMO2,
            S.MEMO3,
            S.DATE1,
            S.DATE2,
            S.DATE3,
            C.LATITUDE AS CITY_LATITUDE,
            C.LONGITUDE AS CITY_LONGITUDE
            FROM schedule s
            JOIN city c
                ON s.place1 = c.city_name
                    or s.place2 = c.city_name
                    or s.place3 = c.city_name
            WHERE s.schedule_num = ${scheduleNum}

</select>

<!-- 전체 게시글 수 -->
 <select id="totalCount" resultType="int"> 
 		select count(*) 
 		from schedule 
 		where 1=1
        <if test='doe_Name != null'>
        	AND DOE_NAME = #{doe_Name}
        </if>
 	</select>

 <!-- 수정하기 -->
  <update id="scheduleUpdate" parameterType="map">
    UPDATE SCHEDULE
    SET
	    MEMBER_ID = #{schedule.member_id},
	    TITLE = #{schedule.title},
	    DOE_NAME = #{schedule.doe_Name},    
	    START_NUM = #{schedule.start_Num},
	    END_DATE = #{schedule.end_Date},
		PLACE1 = #{schedule.place1, jdbcType=VARCHAR},
		PLACE2 = #{schedule.place2, jdbcType=VARCHAR},
		PLACE3 = #{schedule.place3, jdbcType=VARCHAR},
		MEMO1= #{schedule.memo1, jdbcType=CLOB},
		MEMO2 = #{schedule.memo2, jdbcType=VARCHAR},
		MEMO3 = #{schedule.memo3, jdbcType=VARCHAR},
		DATE1 = #{schedule.date1, jdbcType=DATE},
		DATE2 = #{schedule.date2, jdbcType=DATE},
		DATE3 = #{schedule.date3, jdbcType=DATE}
    WHERE
        SCHEDULE_NUM = #{scheduleNum}
</update>

   
<!--삭제하기 -->
     <delete id="schduleDelete">  
          DELETE FROM SCHEDULE
    WHERE
        SCHEDULE_NUM = #{schedule_Num}  
     </delete>  

<!-- 좋아요 검색  -->
	<select id="searchLike" resultType="int">
		SELECT COUNT(*) FROM snslike
		WHERE bno = #{bno} AND userId = #{userId}
	</select>
	
	<!-- 좋아요 등록  -->
	<insert id="createLike">
		INSERT INTO snslike(bno, userId, lno) 
		VALUES(#{bno}, #{userId}, snslike_seq.NEXTVAL)
	</insert>
	
	<!-- 좋아요 삭제  --> 
	<delete id="deleteLike">
		DELETE FROM snslike
		WHERE bno = #{bno} AND userID = #{userId}	
	</delete>

	 <!-- 컨텐츠 검색 갯수 -->
  <select id="getSearchCount" resultType="int">
    select count(*) from contents
    where subject like #{keyword} or content like #{keyword} and show='y'
  </select>
  
  <!-- 마지막 게시물 번호 불러오기 -->
  <select id="MaxCidx" resultType="int">
	select MAX(c_idx) from contents  
  </select>
	<!-- 내 일정 정보 가져오기  -->
	<select id="getMyScheduleList" resultType="com.team1.project.dto.ScheduleDTO">
		select * from SCHEDULE
		where member_id=#{member_id}
	</select>
	
	<!--top3 스케쥴목록 가져오기  -->
	<select id="getTop3ScheduleList" resultType="com.team1.project.dto.ScheduleDTO">
		     SELECT * FROM (
              SELECT * FROM SCHEDULE
              ORDER BY LIKECNT DESC
          )
          WHERE ROWNUM &lt;= 3
	</select>
	
	<update id="plusLikeCnt" parameterType="map">
		UPDATE
			SCHEDULE
			SET LIKECNT = LIKECNT + 1
		WHERE SCHEDULE_NUM = #{SCHEDULE_NUM}
	</update>
	
		<update id="minusLikeCnt" parameterType="map">
		UPDATE
			SCHEDULE
			SET LIKECNT = LIKECNT - 1
		WHERE SCHEDULE_NUM = #{SCHEDULE_NUM}
	</update>

	<!-- 관리자 일일 작성된 일정 게시글 수 -->
	<!-- 오늘 가입한 인원 추출 -->
	<select id="todaySchedule" parameterType="com.team1.project.dto.ScheduleDTO" resultType="com.team1.project.dto.ScheduleDTO">
	    SELECT COUNT(*) AS todaySchedule
	    FROM schedule
	    WHERE TO_CHAR(reg_date, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	</select>
</mapper>
