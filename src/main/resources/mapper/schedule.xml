<?xml version="1.0" encoding="UTF-8"?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.project.dao.ScheduleDAO">

	<resultMap type="com.team1.project.dto.CityDTO" id="CityMap">
		<result property="cityNum" column="city_num" />
		<result property="doeNum" column="doe_num" />
		<result property="cityName" column="city_name" />
		<result property="LATITUDE" column="LATITUDE" />
		<result property="LONGITUDE" column="LONGITUDE" />
	</resultMap>
	<resultMap type="com.team1.project.dto.DayDTO" id="DayMap">
    <result property="dayId" column="day_id" />
    <result property="schedule_Num" column="schedule_Num" />
    <result property="dayDate" column="dayDate" />
<!--     <result property="place" column="place" /> -->
<!--     <result property="memo" column="memo" /> -->
	</resultMap>

<select id="getScheduleList" resultType="com.team1.project.dto.ScheduleDTO">
    SELECT * 
    FROM (
      SELECT 
        a.*, 
        ROW_NUMBER() OVER (ORDER BY SCHEDULE_NUM) AS rnum 
      FROM SCHEDULE a
    ) 
    WHERE rnum BETWEEN #{startNo} AND #{endNo}

</select>

<!--일정 글등록 --> 
    <insert id="writeInsert">
    <selectKey order="BEFORE" keyProperty="schedule_Num" resultType="int">
        select sc.nextval as schedule_Num from dual
    </selectKey> 
    insert into schedule(SCHEDULE_NUM, MEMBER_ID, DOE_NAME, START_NUM, END_DATE, REG_DATE, PLACE1,PLACE2, MEMO1,MOMO2)
values(
	#{schedule_Num},
    #{member_Id},
    #{doe_name},    
    #{start_Num},
    #{end_Date},
    SYSDATE,
	#{PLACE1},
	#{PLACE2},
	#{MEMO1},
	#{MEMO2})
</insert>

    <!--지역번호 만들기 --> 
    <select id="Doenum" resultMap="CityMap">
		 SELECT city_num, city_name
        FROM city
        WHERE doe_num = #{doe_Num}
	</select>


  <!--지역의 위도, 경도 데이터 가져오기 --> 
    <select id="selectCity" resultMap="CityMap">
		SELECT  LATITUDE, LONGITUDE
        FROM city
        WHERE city_name = #{city_name}
	</select>

<!-- 상세보기 -->
<select id="schduleDetail" resultType="com.team1.project.dto.ScheduleDTO">  
    SELECT
        S.SCHEDULE_NUM,
        S.MEMBER_ID,
        S.DOE_NAME,
        S.START_NUM,
        S.END_DATE,
        S.MOD_DATE,
        S.PLACE1,
        S.PLACE2,
        S.MEMO1,
        S.MEMO2
    FROM
        SCHEDULE S
    WHERE
        S.SCHEDULE_NUM = #{schedule_Num}
</select>

<!-- 전체 게시글 수 -->
 <select id="totalCount" resultType="int"> 
 		select count(*) 
 		from schedule 
 	</select>

 <!-- 수정하기 -->
  <update id="scheduleUpdate">
    UPDATE SCHEDULE
    SET
        MEMBER_ID = #{member_Id},
        DOE_NAME = #{doe_name},
        START_NUM = #{start_Num},
        END_DATE = #{end_Date},
        REG_DATE = SYSDATE,
        PLACE1 = #{PLACE1},
        PLACE2 = #{PLACE2},
        MEMO1 = #{MEMO1},
        MEMO2 = #{MEMO2}
    WHERE
        SCHEDULE_NUM = #{schedule_Num}
</update>

   
<!--삭제하기 -->
     <delete id="schduleDelete">  
          DELETE FROM SCHEDULE
    WHERE
        SCHEDULE_NUM = #{schedule_Num}  
     </delete>  

<!-- 좋아요 검색  -->
	<select id="searchLike" resultType="int">
		SELECT COUNT(*) FROM snslike
		WHERE bno = #{bno} AND userId = #{userId}
	</select>
	
	<!-- 좋아요 등록  -->
	<insert id="createLike">
		INSERT INTO snslike(bno, userId, lno) 
		VALUES(#{bno}, #{userId}, snslike_seq.NEXTVAL)
	</insert>
	
	<!-- 좋아요 삭제  --> 
	<delete id="deleteLike">
		DELETE FROM snslike
		WHERE bno = #{bno} AND userID = #{userId}	
	</delete>



</mapper>