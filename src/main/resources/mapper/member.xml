<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.project.dao.MemberDao">
	
	
<!--  	<select id="login" resultType="com.team1.project.dto.MemberDTO"> 
 		SELECT * from member
 		where member_id= #{member_id}
	</select>
 -->
	
	<select id="findByEmail" resultType="com.team1.project.dto.MemberDTO">
		select * from
		member
		where email = #{email}
	</select>
	
	
	<!-- 아이디로 회원 찾기 -->
	<select id="findById" resultType="com.team1.project.dto.MemberDTO">
		select * from
		member
		where member_id = #{member_id}
	</select>	
	
	
	<update id="loginCountInc">
		update member set
			logincnt = logincnt + 1
			<choose>
				<when test="logincnt > 5 ">
					, ACCOUNTLOCKED = 'Y'
				</when>
				<otherwise>
					, ACCOUNTLOCKED = 'N'
				</otherwise>
			</choose>
			where member_id = #{member_id}
	</update>
	
	<update id="loginCountClear">
		update member set
			logincnt = 0
			,ACCOUNTLOCKED = 'N'
		where member_id = #{member_id}  
	</update>
	
	
	   	<insert id="insertMember" >
		insert into member (
			member_id
			,name
			,phone
			,gender
			,email
			,pwd
			,oauth
			,age
			,roles
			,logincnt
			,last_login_time
			,accountexpired
			,accountlocked
			,profile_img
			,nickname

		) values (
			#{member_id}
			,#{name}
			,#{phone}
			,#{gender}
			,#{email}
			,#{pwd}
			,#{oauth}
			,#{age}
			,#{roles}
			,#{loginCnt}
			,#{last_login_time}
			,#{accountExpired}
			,#{accountLocked}
			,#{profile_img}
			,#{nickname}
		) 
	</insert>
	
	<update id="encodingPwd">
		update member set
		pwd = #{pwd}
		where member_id =#{member_id}
	</update>
	
	<!-- 기존 회원인지 체크하기 -->
	<select id="checkMember" resultType="int">
		select count(*) member
		where member_id=#{member_id}
	</select>
	
	<!--   -->
	<update id="updateMemberLastLogin">
		update member set 
			last_login_time = SYSTIMESTAMP
		where member_id = #{member_id}  
	</update>
	
	<!-- 관리자 -->
	
	<!-- 회원리스트 가져오기 -->
	<select id="memberList" parameterType="com.team1.project.dto.MemberDTO" resultType="com.team1.project.dto.MemberDTO">
		SELECT * from member
	</select>
	
	<!-- 관리자 계정 가져오기 -->
	<select id="adminList" parameterType="com.team1.project.dto.MemberDTO" resultType="com.team1.project.dto.MemberDTO">
		SELECT * from member where roles='Admin'
	</select>
</mapper>