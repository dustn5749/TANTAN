<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.project.dao.UsDAO">
 
<insert id="insertUsList" parameterType="com.team1.project.dto.UsDTO">
    <selectKey keyProperty="us_num" resultType="int" order="BEFORE">
        SELECT NVL(MAX(US_NUM), 0) + 1 FROM US
    </selectKey>

    INSERT INTO US (
        US_NUM,
        TITLE, 
        CONTENT, 
        WRITER, 
        US_CNT, 
        REGDATE,
        START_DATE, 
        END_DATE
        <if test="imageUrl != null and imageUrl != ''">
            , IMAGEURL
        </if>
    )
    VALUES (
        #{us_num},
        #{title},
        #{content},
        #{writer}, 
        #{us_cnt},
        TO_DATE(#{regdate}, 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE(#{start_Date}, 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE(#{end_Date}, 'YYYY-MM-DD HH24:MI:SS')
        <if test="imageUrl != null and imageUrl != ''">
            , #{imageUrl}
        </if>
    )
</insert>

 
  <!-- 전체목록조회 -->
<select id="getUsList" resultType="com.team1.project.dto.UsDTO" parameterType="java.util.Map">

SELECT u.*, uf.usfilenum as fileNo
	FROM (
		SELECT * 
	    FROM (
	        SELECT 
	        rownum AS nrow, 
	        us_num, 
	        city_name,
	        writer, 
	        us_cnt,
	        regdate,
	        start_Date,
	        end_Date,
	        title, 
	        content,
	        imageurl
	        FROM (
	            SELECT rownum  AS 
	            nrow,
	            us_num,
	            city_name,
	            writer,
	            us_cnt,
	            regdate,
	            start_Date,
	            end_Date,
	            title,
	            content,
	            imageurl
	            FROM us a 
	            <if test="start_Date != null and end_Date != null">
	                WHERE start_Date <![CDATA[>=]]> TO_DATE( #{start_Date}, 'YYYY-MM-DD') 
          			AND end_Date <![CDATA[<=]]> TO_DATE(#{end_Date}, 'YYYY-MM-DD')
	            </if>
	            order by us_num desc
	        )
	    ) WHERE nrow BETWEEN #{startNo} AND #{endNo}
	) u
	left outer join us_file uf
		on u.us_num = uf.us_num
</select>

   
<!-- 메인 탑5 노출 -->
<select id="usTop5" resultType="com.team1.project.dto.UsDTO">
   <![CDATA[
       SELECT 
          ROWNUM AS nrow, SUB.* 
       FROM (  
          SELECT  
             US_NUM, CITY_NAME, WRITER, US_CNT, REGDATE, START_DATE, END_DATE, TITLE, CONTENT 
          FROM us  
          ORDER BY us_num DESC 
       ) SUB   
       WHERE ROWNUM <= 5 
    ]]> 
</select>

<!-- 전체 게시글 수 -->
<select id="totalCount" resultType="int">
      select count(*)
      from us
    </select>

<!-- 동행 글쓰기 -->
<insert id="writeInsert" keyProperty="us_num" useGeneratedKeys="true" parameterType="com.team1.project.dto.UsDTO">
    <selectKey keyProperty="us_num" resultType="int" order="BEFORE">
        SELECT us_sq.nextval as us_num FROM dual
    </selectKey>
    insert into us (
        us_num,
        city_name,
        writer,
        us_cnt,
        regdate,
        start_date,
        end_date,
        title,
        content,
        status,
        reportcnt
    ) VALUES (
        us_sq.nextval,
        #{city_name},
        #{writer},
        #{us_cnt},
        sysdate,
        #{start_Date},
        #{end_Date},
        #{title},
        #{content},
        'N',
        0
    )
</insert>

   <select id="nextUsNum" resultType="int">
       SELECT max(us_num) from us
   </select>
<!-- 상세보기 -->
    <select id="usDetail" resultType="com.team1.project.dto.UsDTO">
    SELECT 
        u.us_num, 
        u.city_name,
        u.writer, 
        u.us_cnt,
        u.regdate,
        u.start_Date,
        u.end_Date,
        u.title, 
        u.content,
        u.imageurl,
       uf.usfilenum as fileNo
    FROM US u 
   	left outer join us_file uf
   		on u.us_num = uf.us_num
    WHERE u.US_NUM = #{us_num}
 </select> 

<!-- 수정하기 -->
   <update id="usUpdate"> 
    UPDATE US 
    SET 
    CITY_NAME = #{city_name},
    US_CNT = #{us_cnt}, 
    START_DATE = #{start_Date}, 
    END_DATE = #{end_Date}, 
    TITLE = #{title}, 
    CONTENT = #{content} 
    WHERE US_NUM = #{us_num} 
</update> 
   
<!-- 삭제하기  -->
    <delete id="usDelete"> 
         DELETE FROM US 
         WHERE US_NUM = #{us_num} 
     </delete> 
     
     
     <!-- 최신 동행 모집글 -->
      <select id="getUsRecentList" resultType="com.team1.project.dto.UsDTO">
          SELECT * FROM (
              SELECT * FROM us
              ORDER BY us_num 
          )
          WHERE ROWNUM &lt;= 3
      </select>
      
      
      
<!-- 관리자 -->
<!-- 신고받은 동행 리스트 가져오기 -->
   <select id="usList" parameterType="com.team1.project.dto.UsDTO" resultType="com.team1.project.dto.UsDTO">
<!--       SELECT * from us where reportcnt > 0 ORDER BY STATUS desc -->
		SELECT * FROM us ORDER BY status desc
   </select>
   
   <!--us에 fileno저장  -->
   <update id="updateFile" parameterType="com.team1.project.dto.UsFileDTO">
      update us set  FILENO=#{usFileNum}
      where us_num=#{usNum}
   </update>
   
<!-- 신고받은 동행 리스트 차트 연습용 -->
   <select id="usReportList" parameterType="com.team1.project.dto.UsDTO" resultType="com.team1.project.dto.UsDTO">
     <![CDATA[
       SELECT TO_CHAR(regdate, 'YYYY-MM-DD') AS regdate, COUNT(*) AS post_count, reportcnt
       FROM US
       WHERE reportcnt >= 1
       GROUP BY TO_CHAR(regdate, 'YYYY-MM-DD'), reportcnt
       ORDER BY regdate
     ]]>
   </select>
   
<!-- 관리자 동행 게시글 삭제 처리 -->
   <update id="ausDelete">
      UPDATE us
      SET status = 'Y'
      WHERE us_num = #{us_num}
   </update>
   
<!-- 관리자 동행 게시글 복구 -->
   <update id="ausChange">
      UPDATE us
      SET status = 'N'
      WHERE us_num = #{us_num}
   </update>
   
<!-- 관리자 월별 작성된 게시글 수 추출 -->
	<select id="monthUs" parameterType="com.team1.project.dto.UsDTO" resultType="com.team1.project.dto.UsDTO">
		SELECT TO_CHAR(regdate, 'MM') AS MONTH,
		       COUNT(*) AS write_COUNT
		FROM us
		WHERE EXTRACT(YEAR FROM regdate) = 2023
		GROUP BY TO_CHAR(regdate, 'MM')
		ORDER BY TO_CHAR(regdate, 'MM')
	</select>
</mapper>